# Generated by Django 4.2.7 on 2025-10-09 20:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AccessLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "device_log_id",
                    models.BigIntegerField(
                        unique=True, verbose_name="ID do Log no Dispositivo"
                    ),
                ),
                ("user_id", models.IntegerField(verbose_name="ID do Usuário")),
                (
                    "user_name",
                    models.CharField(max_length=255, verbose_name="Nome do Usuário"),
                ),
                (
                    "event_type",
                    models.IntegerField(
                        choices=[
                            (1, "Entrada"),
                            (2, "Saída"),
                            (3, "Acesso Negado"),
                            (4, "Erro de Leitura"),
                            (5, "Timeout"),
                            (6, "Manutenção"),
                            (7, "Acesso Autorizado"),
                            (8, "Acesso Bloqueado"),
                        ],
                        verbose_name="Tipo de Evento",
                    ),
                ),
                (
                    "event_description",
                    models.CharField(
                        max_length=500, verbose_name="Descrição do Evento"
                    ),
                ),
                (
                    "device_id",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="ID do Dispositivo"
                    ),
                ),
                (
                    "device_name",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Nome do Dispositivo",
                    ),
                ),
                (
                    "portal_id",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="ID do Portal"
                    ),
                ),
                (
                    "device_timestamp",
                    models.DateTimeField(verbose_name="Timestamp do Dispositivo"),
                ),
                (
                    "received_timestamp",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Timestamp de Recebimento"
                    ),
                ),
                (
                    "processed_timestamp",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Timestamp de Processamento"
                    ),
                ),
                (
                    "processing_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pendente"),
                            ("processing", "Processando"),
                            ("processed", "Processado"),
                            ("error", "Erro"),
                            ("ignored", "Ignorado"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Status de Processamento",
                    ),
                ),
                (
                    "processing_error",
                    models.TextField(
                        blank=True, null=True, verbose_name="Erro de Processamento"
                    ),
                ),
                (
                    "raw_data",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Dados Brutos"
                    ),
                ),
                (
                    "processed_data",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Dados Processados"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
            ],
            options={
                "verbose_name": "Log de Acesso",
                "verbose_name_plural": "Logs de Acesso",
                "ordering": ["-device_timestamp"],
            },
        ),
        migrations.CreateModel(
            name="SystemLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("DEBUG", "Debug"),
                            ("INFO", "Informação"),
                            ("WARNING", "Aviso"),
                            ("ERROR", "Erro"),
                            ("CRITICAL", "Crítico"),
                        ],
                        max_length=10,
                        verbose_name="Nível",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("system", "Sistema"),
                            ("device", "Dispositivo"),
                            ("employee", "Funcionário"),
                            ("interjornada", "Interjornada"),
                            ("authentication", "Autenticação"),
                            ("database", "Banco de Dados"),
                            ("api", "API"),
                            ("websocket", "WebSocket"),
                            ("monitoring", "Monitoramento"),
                        ],
                        max_length=20,
                        verbose_name="Categoria",
                    ),
                ),
                ("message", models.TextField(verbose_name="Mensagem")),
                (
                    "user_id",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="ID do Usuário"
                    ),
                ),
                (
                    "user_name",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Nome do Usuário",
                    ),
                ),
                (
                    "device_id",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="ID do Dispositivo"
                    ),
                ),
                (
                    "device_name",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Nome do Dispositivo",
                    ),
                ),
                (
                    "details",
                    models.JSONField(blank=True, default=dict, verbose_name="Detalhes"),
                ),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="Timestamp"),
                ),
            ],
            options={
                "verbose_name": "Log do Sistema",
                "verbose_name_plural": "Logs do Sistema",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(fields=["level"], name="logs_system_level_875cae_idx"),
                    models.Index(
                        fields=["category"], name="logs_system_categor_2d3ff0_idx"
                    ),
                    models.Index(
                        fields=["timestamp"], name="logs_system_timesta_1ce06b_idx"
                    ),
                    models.Index(
                        fields=["user_id"], name="logs_system_user_id_944528_idx"
                    ),
                    models.Index(
                        fields=["device_id"], name="logs_system_device__9b6304_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="LogProcessingQueue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pendente"),
                            ("processing", "Processando"),
                            ("completed", "Concluído"),
                            ("failed", "Falhou"),
                            ("retry", "Tentar Novamente"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                ("priority", models.IntegerField(default=0, verbose_name="Prioridade")),
                ("attempts", models.IntegerField(default=0, verbose_name="Tentativas")),
                (
                    "max_attempts",
                    models.IntegerField(default=3, verbose_name="Máximo de Tentativas"),
                ),
                (
                    "last_attempt",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Última Tentativa"
                    ),
                ),
                (
                    "next_retry",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Próxima Tentativa"
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True, null=True, verbose_name="Mensagem de Erro"
                    ),
                ),
                (
                    "error_details",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Detalhes do Erro"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "access_log",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="queue_entries",
                        to="logs.accesslog",
                        verbose_name="Log de Acesso",
                    ),
                ),
            ],
            options={
                "verbose_name": "Entrada da Fila de Processamento",
                "verbose_name_plural": "Fila de Processamento de Logs",
                "ordering": ["-priority", "created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="accesslog",
            index=models.Index(
                fields=["device_log_id"], name="logs_access_device__6fd37c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="accesslog",
            index=models.Index(
                fields=["user_id"], name="logs_access_user_id_2a6728_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="accesslog",
            index=models.Index(
                fields=["event_type"], name="logs_access_event_t_8a6681_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="accesslog",
            index=models.Index(
                fields=["device_timestamp"], name="logs_access_device__0018eb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="accesslog",
            index=models.Index(
                fields=["processing_status"], name="logs_access_process_2eee53_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="accesslog",
            index=models.Index(
                fields=["device_id"], name="logs_access_device__a4d69d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="logprocessingqueue",
            index=models.Index(fields=["status"], name="logs_logpro_status_5243fa_idx"),
        ),
        migrations.AddIndex(
            model_name="logprocessingqueue",
            index=models.Index(
                fields=["priority"], name="logs_logpro_priorit_7d27ee_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="logprocessingqueue",
            index=models.Index(
                fields=["next_retry"], name="logs_logpro_next_re_21fc42_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="logprocessingqueue",
            index=models.Index(
                fields=["created_at"], name="logs_logpro_created_7e4418_idx"
            ),
        ),
    ]
