"""
Configura√ß√£o da aplica√ß√£o de logs.
"""
from django.apps import AppConfig
import logging

logger = logging.getLogger(__name__)


class LogsConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.logs'
    verbose_name = 'Logs de Acesso'

    def ready(self):
        """Inicializa os servi√ßos autom√°ticos quando o Django estiver pronto."""
        # Importar aqui para evitar import circular
        from .services import log_monitor_service
        from .workers import access_log_worker
        
        # Verificar se estamos em modo de desenvolvimento ou produ√ß√£o
        import os
        from django.conf import settings
        
        # S√≥ iniciar os servi√ßos se n√£o estiver em modo de teste
        if not os.environ.get('DJANGO_TESTING') and not os.environ.get('TESTING'):
            try:
                # Iniciar AccessLogWorker para sincroniza√ß√£o da catraca
                if access_log_worker.start_worker():
                    logger.info("‚úÖ AccessLogWorker iniciado com sucesso!")
                else:
                    logger.warning("‚ö†Ô∏è Falha ao iniciar AccessLogWorker")
                
                # Iniciar monitoramento autom√°tico de sess√µes
                if log_monitor_service.start_monitoring():
                    logger.info("‚úÖ Monitoramento autom√°tico de sess√µes iniciado com sucesso!")
                else:
                    logger.warning("‚ö†Ô∏è Falha ao iniciar monitoramento autom√°tico de sess√µes")
                    
            except Exception as e:
                logger.error(f"‚ùå Erro ao inicializar servi√ßos autom√°ticos: {e}")
        else:
            logger.info("üîç Servi√ßos autom√°ticos desabilitados - modo de teste")
